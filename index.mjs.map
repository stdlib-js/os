{"version":3,"file":"index.mjs","sources":["../arch/lib/index.js","../arch/lib/main.js","../byte-order/lib/index.js","../byte-order/lib/main.js","../platform/lib/index.js","../platform/lib/main.js","../homedir/lib/homedir.js","../homedir/lib/index.js","../configdir/lib/configdir.js","../configdir/lib/index.js","../float-word-order/lib/index.js","../float-word-order/lib/main.js","../num-cpus/lib/browser.js","../tmpdir/lib/tmpdir.js","../num-cpus/lib/navigator.js","../tmpdir/lib/index.js","../lib/index.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Operating system CPU architecture.\n*\n* @module @stdlib/os/arch\n*\n* @example\n* var ARCH = require( '@stdlib/os/arch' );\n*\n* if ( ARCH === 'arm' || ARCH === 'arm64' ) {\n*    console.log( 'Running on ARM...' );\n* } else {\n*    console.log( 'Running on something else...' );\n* }\n*/\n\n// MODULES //\n\nvar ARCH = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = ARCH;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar proc = require( 'process' );\n\n\n// MAIN //\n\n/**\n* Operating system CPU architecture.\n*\n* @constant\n* @type {string}\n*/\nvar ARCH = proc.arch;\n\n\n// EXPORTS //\n\nmodule.exports = ARCH;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Platform byte order.\n*\n* @module @stdlib/os/byte-order\n*\n* @example\n* var BYTE_ORDER = require( '@stdlib/os/byte-order' );\n*\n* if ( BYTE_ORDER === 'little-endian' ) {\n*    console.log( 'Least significant byte comes first...' );\n* } else if ( BYTE_ORDER === 'big-endian' ) {\n*    console.log( 'Most significant byte comes first...' );\n* } else {\n*    console.log( 'This is uncommon...' );\n* }\n*/\n\n// MODULES //\n\nvar BYTE_ORDER = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = BYTE_ORDER;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar IS_LITTLE_ENDIAN = require( '@stdlib/assert/is-little-endian' );\nvar IS_BIG_ENDIAN = require( '@stdlib/assert/is-big-endian' );\n\n\n// MAIN //\n\n/**\n* Platform byte order.\n*\n* @constant\n* @type {string}\n*/\nvar BYTE_ORDER;\nif ( IS_LITTLE_ENDIAN && IS_BIG_ENDIAN ) {\n\tBYTE_ORDER = 'mixed-endian';\n} else if ( IS_LITTLE_ENDIAN ) {\n\tBYTE_ORDER = 'little-endian';\n} else if ( IS_BIG_ENDIAN ) {\n\tBYTE_ORDER = 'big-endian';\n} else {\n\tBYTE_ORDER = 'unknown';\n}\n\n\n// EXPORTS //\n\nmodule.exports = BYTE_ORDER;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Platform on which the current process is running.\n*\n* @module @stdlib/os/platform\n*\n* @example\n* var PLATFORM = require( '@stdlib/os/platform' );\n*\n* if ( PLATFORM === 'win32' ) {\n*    console.log( 'Running on a PC...' );\n* } else if ( PLATFORM === 'darwin' ) {\n*    console.log( 'Running on a Mac...' );\n* } else {\n*    console.log( 'Running on something else...' );\n* }\n*/\n\n// MODULES //\n\nvar PLATFORM = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = PLATFORM;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar proc = require( 'process' );\n\n\n// MAIN //\n\n/**\n* Platform on which the current process is running.\n*\n* @constant\n* @type {string}\n*/\nvar PLATFORM = proc.platform;\n\n\n// EXPORTS //\n\nmodule.exports = PLATFORM;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar ENV = require( '@stdlib/process/env' );\nvar IS_WINDOWS = require( '@stdlib/assert/is-windows' );\nvar PLATFORM = require( './../../platform' );\nvar getuid = require( '@stdlib/process/getuid' );\n\n\n// MAIN //\n\n/**\n* Returns the current user's home directory.\n*\n* @returns {(string|null)} home directory\n*\n* @example\n* var home = homedir();\n* // e.g., returns '/Users/<username>'\n*/\nfunction homedir() {\n\tvar home;\n\tvar user;\n\n\tif ( IS_WINDOWS ) {\n\t\t// https://github.com/libuv/libuv/blob/764877fd9e4ea67c0cbe27bf81b2b294ed33b0f5/src/win/util.c#L1170\n\t\t// https://en.wikipedia.org/wiki/Environment_variable#Windows\n\t\thome = ENV[ 'USERPROFILE' ] || ENV[ 'HOMEDRIVE' ]+ENV[ 'HOMEPATH' ] || ENV[ 'HOME' ];\n\t\treturn ( home ) ? home : null; // eslint-disable-line no-unneeded-ternary\n\t}\n\t// https://github.com/libuv/libuv/blob/9fbcca048181b927cfcdb5c6c49e5bdff173aad5/src/unix/core.c#L1030\n\thome = ENV[ 'HOME' ];\n\tif ( home ) {\n\t\treturn home;\n\t}\n\t// Get the current user account (https://docs.python.org/2/library/getpass.html):\n\tuser = ENV[ 'LOGNAME' ] || ENV[ 'USER' ] || ENV[ 'LNAME' ] || ENV[ 'USERNAME' ];\n\n\t// If on Mac OS X, use the Mac path convention (http://apple.stackexchange.com/questions/119230/what-is-standard-for-os-x-filesystem-e-g-opt-vs-usr)...\n\tif ( PLATFORM === 'darwin' ) {\n\t\treturn ( user ) ? '/Users/'+user : null;\n\t}\n\t// Check if running as 'root' (https://en.wikipedia.org/wiki/Filesystem_Hierarchy_Standard)...\n\tif ( getuid() === 0 ) {\n\t\treturn '/root';\n\t}\n\t// If on Linux, use the Linux path convention (https://en.wikipedia.org/wiki/Filesystem_Hierarchy_Standard)...\n\treturn ( user ) ? '/home/'+user : null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = homedir;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return the current user's home directory.\n*\n* @module @stdlib/os/homedir\n*\n* @example\n* var homedir = require( '@stdlib/os/homedir' );\n* var home = homedir();\n* // e.g., returns '/Users/<username>'\n*/\n\n// MODULES //\n\nvar os = require( 'os' );\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar homedir = require( './homedir.js' );\n\n\n// VARIABLES //\n\nvar home = ( isFunction( os.homedir ) ) ? os.homedir : homedir;\n\n\n// EXPORTS //\n\nmodule.exports = home;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar join = require( 'path' ).join;\nvar ENV = require( '@stdlib/process/env' );\nvar IS_WINDOWS = require( '@stdlib/assert/is-windows' );\nvar PLATFORM = require( './../../platform' );\nvar isString = require( '@stdlib/assert/is-string' ).isPrimitive;\nvar homedir = require( './../../homedir' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns a directory for user-specific configuration files.\n*\n* @param {string} [p] - path to append to a base directory\n* @throws {TypeError} first argument must be a string\n* @returns {(string|null)} directory\n*\n* @example\n* var dir = configdir();\n* // e.g., returns '/Users/<username>/Library/Preferences'\n*\n* @example\n* var dir = configdir( 'appname/config' );\n* // e.g., returns '/Users/<username>/Library/Preferences/appname/config'\n*/\nfunction configdir( p ) {\n\tvar append;\n\tvar home;\n\tvar dir;\n\n\tif ( arguments.length ) {\n\t\tif ( !isString( p ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Must provide a string. Value: `%s`.', p ) );\n\t\t}\n\t\tappend = p;\n\t} else {\n\t\tappend = '';\n\t}\n\tif ( IS_WINDOWS ) {\n\t\t// http://blogs.msdn.com/b/patricka/archive/2010/03/18/where-should-i-store-my-data-and-configuration-files-if-i-target-multiple-os-versions.aspx\n\t\t// https://en.wikipedia.org/wiki/Environment_variable#Windows\n\t\tdir = ENV[ 'LOCALAPPDATA' ] || ENV[ 'APPDATA' ];\n\t\treturn ( dir ) ? join( dir, append ) : null;\n\t}\n\thome = homedir();\n\tif ( home === null ) {\n\t\treturn null;\n\t}\n\tif ( PLATFORM === 'darwin' ) {\n\t\t// http://stackoverflow.com/questions/410013/where-do-osx-applications-typically-store-user-configuration-data\n\t\treturn join( home, 'Library', 'Preferences', append );\n\t}\n\t// http://www.pathname.com/fhs/\n\t// http://www.pathname.com/fhs/pub/fhs-2.3.html\n\t// http://standards.freedesktop.org/basedir-spec/basedir-spec-latest.html\n\tdir = ENV[ 'XDG_CONFIG_HOME' ] || join( home, '.config' );\n\treturn join( dir, append );\n}\n\n\n// EXPORTS //\n\nmodule.exports = configdir;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a directory for user-specific configuration files.\n*\n* @module @stdlib/os/configdir\n*\n* @example\n* var configdir = require( '@stdlib/os/configdir' );\n*\n* var dir = configdir();\n* // e.g., returns '/Users/<username>/Library/Preferences'\n*\n* dir = configdir( 'appname/config' );\n* // e.g., returns '/Users/<username>/Library/Preferences/appname/config'\n*/\n\n// MODULES //\n\nvar configdir = require( './configdir.js' );\n\n\n// EXPORTS //\n\nmodule.exports = configdir;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Platform float word order.\n*\n* @module @stdlib/os/float-word-order\n*\n* @example\n* var FLOAT_WORD_ORDER = require( '@stdlib/os/float-word-order' );\n*\n* if ( FLOAT_WORD_ORDER === 'little-endian' ) {\n*     console.log( 'Least significant word comes first...' );\n* } else if ( FLOAT_WORD_ORDER === 'big-endian' ) {\n*     console.log( 'Most significant word comes first...' );\n* } else {\n*     console.log( 'This is uncommon...' );\n* }\n*/\n\n// MODULES //\n\nvar FLOAT_WORD_ORDER = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = FLOAT_WORD_ORDER;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar BYTE_ORDER = require( './../../byte-order' );\n\n\n// MAIN //\n\n/**\n* Platform float word order.\n*\n* @constant\n* @type {string}\n*/\nvar FLOAT_WORD_ORDER;\nif ( BYTE_ORDER === 'little-endian' || BYTE_ORDER === 'big-endian' ) {\n\tFLOAT_WORD_ORDER = BYTE_ORDER;\n} else {\n\tFLOAT_WORD_ORDER = 'unknown';\n}\n\n\n// EXPORTS //\n\nmodule.exports = FLOAT_WORD_ORDER;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar nav = require( './navigator.js' );\n\n\n// VARIABLES //\n\nvar n;\n\n\n// FUNCTIONS //\n\n/**\n* Returns the number of CPUs.\n*\n* @private\n* @returns {PositiveInteger} number of CPUs\n*\n* @example\n* var n = numCPUs();\n* // returns <number>\n*/\nfunction numCPUs() {\n\treturn nav.hardwareConcurrency || 1;\n}\n\n\n// MAIN //\n\nn = numCPUs();\n\n\n// EXPORTS //\n\nmodule.exports = n;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar IS_WINDOWS = require( '@stdlib/assert/is-windows' );\nvar ENV = require( '@stdlib/process/env' );\n\n\n// VARIABLES //\n\n// Match a trailing slash...\nvar RE;\nif ( IS_WINDOWS ) {\n\tRE = /[^:]\\\\$/;\n} else {\n\tRE = /.\\/$/;\n}\n\n\n// MAIN //\n\n/**\n* Returns the directory for storing temporary files.\n*\n* ## Notes\n*\n* -   Introduced in io.js and Node v4. See the [ES5][1] and [ES6][2].\n*\n* [1]: https://github.com/nodejs/node/blob/9cd44bb2b683446531306bbcff8739fc3526d02c/lib/os.js#L31\n* [2]: https://github.com/nodejs/node/blob/5e5ec2cd1ee875ec5c837b5e0721d73628f12053/lib/os.js#L40\n*\n* @returns {string} directory for temporary files\n*\n* @example\n* var dir = tmpdir();\n* // e.g., returns '/path/to/temporary/files/directory'\n*/\nfunction tmpdir() {\n\tvar tmp;\n\tif ( IS_WINDOWS ) {\n\t\ttmp = ENV.TEMP ||\n\t\t\tENV.TMP ||\n\t\t\t(ENV.SystemRoot || ENV.windir || '') + '\\\\temp';\n\t} else {\n\t\ttmp = ENV.TMPDIR ||\n\t\t\tENV.TMP ||\n\t\t\tENV.TEMP ||\n\t\t\t'/tmp';\n\t}\n\tif ( RE.test( tmp ) ) {\n\t\ttmp = tmp.slice( 0, -1 );\n\t}\n\treturn tmp;\n}\n\n\n// EXPORTS //\n\nmodule.exports = tmpdir;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* global navigator */\n\n'use strict';\n\n// MAIN //\n\nvar nav;\nif ( typeof navigator === 'undefined' ) {\n\tnav = {};\n} else {\n\tnav = navigator;\n}\n\n\n// EXPORTS //\n\nmodule.exports = nav;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return the directory for storing temporary files.\n*\n* @module @stdlib/os/tmpdir\n*\n* @example\n* var tmpdir = require( '@stdlib/os/tmpdir' );\n*\n* var dir = tmpdir();\n* // e.g., returns '/path/to/tempory/files/directory'\n*/\n\n// MODULES //\n\nvar tmpdir = require( './tmpdir.js' );\n\n\n// EXPORTS //\n\nmodule.exports = tmpdir;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/*\n* When adding modules to the namespace, ensure that they are added in alphabetical order according to module name.\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-read-only-property' ;\n\n\n// MAIN //\n\n/**\n* Top-level namespace.\n*\n* @namespace ns\n*/\nvar ns = {};\n\n/**\n* @name ARCH\n* @memberof ns\n* @readonly\n* @type {string}\n* @see {@link module:@stdlib/os/arch}\n*/\nimport ARCH from './../arch';\nsetReadOnly( ns, 'ARCH', ARCH );\n\n/**\n* @name BYTE_ORDER\n* @memberof ns\n* @readonly\n* @type {string}\n* @see {@link module:@stdlib/os/byte-order}\n*/\nimport BYTE_ORDER from './../byte-order';\nsetReadOnly( ns, 'BYTE_ORDER', BYTE_ORDER );\n\n/**\n* @name configdir\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/os/configdir}\n*/\nimport configdir from './../configdir';\nsetReadOnly( ns, 'configdir', configdir );\n\n/**\n* @name FLOAT_WORD_ORDER\n* @memberof ns\n* @readonly\n* @type {string}\n* @see {@link module:@stdlib/os/float-word-order}\n*/\nimport FLOAT_WORD_ORDER from './../float-word-order';\nsetReadOnly( ns, 'FLOAT_WORD_ORDER', FLOAT_WORD_ORDER );\n\n/**\n* @name homedir\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/os/homedir}\n*/\nimport homedir from './../homedir';\nsetReadOnly( ns, 'homedir', homedir );\n\n/**\n* @name NUM_CPUS\n* @memberof ns\n* @readonly\n* @type {PositiveInteger}\n* @see {@link module:@stdlib/os/num-cpus}\n*/\nimport NUM_CPUS from './../num-cpus';\nsetReadOnly( ns, 'NUM_CPUS', NUM_CPUS );\n\n/**\n* @name PLATFORM\n* @memberof ns\n* @readonly\n* @type {string}\n* @see {@link module:@stdlib/os/platform}\n*/\nimport PLATFORM from './../platform';\nsetReadOnly( ns, 'PLATFORM', PLATFORM );\n\n/**\n* @name tmpdir\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/os/tmpdir}\n*/\nimport tmpdir from './../tmpdir';\nsetReadOnly( ns, 'tmpdir', tmpdir );\n\n\n// EXPORTS //\n\nexport default ns;\n"],"names":["lib","require$$0","arch","require$$1","platform","ENV","IS_WINDOWS","PLATFORM","require$$2","getuid","require$$3","homedir_1","home","user","os","homedir","join","isString","require$$4","isPrimitive","require$$5","format","require$$6","configdir_1","p","append","dir","arguments","length","TypeError","RE","browser","navigator","hardwareConcurrency","tmp","TEMP","TMP","SystemRoot","windir","TMPDIR","test","slice","ns","setReadOnly","ARCH","BYTE_ORDER","configdir","FLOAT_WORD_ORDER","NUM_CPUS","tmpdir"],"mappings":";;23GA0CAA,ECpBWC,EAWKC,KCWhBF,ECtBuBC,GACHE,EAaN,eAdSF,EAgBT,gBAfME,EAiBN,aAEA,ukECEdH,GCtBWC,EAWSG,82BCXhBC,GAAMJ,EACNK,GAAaH,EACbI,GAAWC,GACXC,GAASC,EA+Cb,IAAAC,GAjCA,WACC,IAAIC,EACAC,EAEJ,OAAKP,IAGJM,EAAOP,GAAoB,aAAIA,aAAmBA,GAAe,UAAMA,GAAW,OACzD,MAG1BO,EAAOP,SAECO,GAGRC,EAAOR,GAAgB,SAAIA,SAAiBA,GAAY,OAAMA,GAAe,SAG3D,WAAbE,GACG,EAAW,UAAUM,EAAO,KAGlB,IAAbJ,KACG,QAGD,EAAW,SAASI,EAAO,OCjC/BC,gPAEAC,GAAUP,GAUdR,GAXiBG,EAMQW,GAAGC,SAAcD,GAAGC,QAAUA,GClBnDC,GAAOf,GAAkBe,KACzBX,GAAMF,EACNG,GAAaE,EACbD,GAAWG,GACXO,GAAWC,EAAsCC,YACjDJ,GAAUK,GACVC,GAASC,EAyDb,IAAAC,GArCA,SAAoBC,GACnB,IAAIC,EACAb,EACAc,EAEJ,GAAKC,UAAUC,OAAS,CACvB,IAAMX,GAAUO,GACf,MAAM,IAAIK,UAAWR,GAAQ,wDAAyDG,IAEvFC,EAASD,OAETC,EAAS,GAEV,OAAKnB,IAGJoB,EAAMrB,GAAqB,cAAIA,GAAc,SAC5BW,GAAMU,EAAKD,GAAW,KAG1B,QADdb,EAAOG,MAEC,KAEU,WAAbR,GAEGS,GAAMJ,EAAM,UAAW,cAAea,IAK9CC,EAAMrB,GAAsB,iBAAMW,GAAMJ,EAAM,WACvCI,GAAMU,EAAKD,KCrCnBzB,GALgBC,GCOhBD,GCVoB,kBAZHC,GAYqC,eAZrCA,IAeG,UCiBpB,ICzBI6B,GDyBJC,IE7B0B,oBAAdC,UACL,GAEAA,WFeKC,qBAAuB,ECrB/B3B,GAAaL,EACbI,GAAMF,EAQT2B,GADIxB,GACC,UAEA,OA2CN,IErCAN,GFgBA,WACC,IAAIkC,EAcJ,OAZCA,EADI5B,GACED,GAAI8B,MACT9B,GAAI+B,MACH/B,GAAIgC,YAAchC,GAAIiC,QAAU,IAAM,SAElCjC,GAAIkC,QACTlC,GAAI+B,KACJ/B,GAAI8B,MACJ,OAEGL,GAAGU,KAAMN,KACbA,EAAMA,EAAIO,MAAO,GAAI,IAEfP,GGlCRQ,GAAA,GAUAC,EAAAD,GAAA,OAAAE,GAUAD,EAAAD,GAAA,aAAAG,GAUAF,EAAAD,GAAA,YAAAI,IAUAH,EAAAD,GAAA,mBAAAK,IAUAJ,EAAAD,GAAA,UAAA3B,IAUA4B,EAAAD,GAAA,WAAAM,IAUAL,EAAAD,GAAA,WAAAnC,IAUAoC,EAAAD,GAAA,SAAAO"}